    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 2

Enter Payload: 10
Inserted 10 at front...
List: 10

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 3

Enter Payload: 30
Inserted 30 at back...
List: 10 -> 30

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 4

Enter Location: 2
Enter Payload: 20
Inserted node 20 at location 2...
List: 10 -> 20 -> 30

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 9

Number of Nodes: 3

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 1

Enter Search Element: 40
Element not found...

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 1

Enter Search Element: 30
Element 30 found...

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 7

Enter Location: 2
Deleted node at location 2...
List: 10 -> 30

Press any key to continue..

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 5

Deleted node at front...
List: 30

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 6

Deleted node at back...
List is empty...

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 2

Enter Payload: 99
Inserted 99 at front...
List: 99

Press any key to continue...

    Circular Doubly Linked List
===================================
  (1) Search      (2) InsertFront
  (3) InsertBack  (4) InsertAtLoc
  (5) DeleteFront (6) DeleteBack
  (7) DeleteAtLoc (8) Display
  (9) Count       (0) Exit

Enter Choice: 0

Press any key to continue...

==866== HEAP SUMMARY:
==866==     in use at exit: 0 bytes in 0 blocks
==866==   total heap usage: 7 allocs, 7 frees, 77,920 bytes allocated
==866== 
==866== All heap blocks were freed -- no leaks are possible
